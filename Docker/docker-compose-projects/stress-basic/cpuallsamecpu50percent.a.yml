version: '2'

#test details and objectives
#	we use only one cpu for all container
#	we limit to 50% then to 20%
#metrics
#	after start we gather cpu info on the host server
#example metrics capture
#systemd-cgtop -c
#
#conclusion
#	on a four cpu server (max 400%) we get 20% cpu usage per container for 80% usage on cpu1
#	if we limit to 50% the limit is not sued since the cpu share is equal for all containers
#	and therefore the single cpu 100% is divided evenly as expected to 25%


#cpu only 4 container stress test
#	--cpu-quota=0   Limit the CPU CFS (Completely Fair Scheduler) quota
#	--cpu-shares=0  CPU shares (relative weight)
#	--cpuset-cpus="0,1"	CPUs in which to allow execution (0-3, 0,1)
#examples
#	--cpu-quota=50000 50% cpu cycles every 100ms since 50000/100000 = 1/2
#	note the - versus _ issue
services:
  stress0:
    image: dkuffner/docker-stress
    command: --cpu 8 --timeout 1m
    cpuset: "1"
    cpu_quota: 20000
  stress1:
    image: dkuffner/docker-stress
    command: --cpu 8 --timeout 1m
    cpuset: "1"
    cpu_quota: 20000
  stress2:
    image: dkuffner/docker-stress
    command: --cpu 8 --timeout 1m
    cpuset: "1"
    cpu_quota: 20000
  stress3:
    image: dkuffner/docker-stress
    command: --cpu 8 --timeout 1m
    cpuset: "1"
    cpu_quota: 20000
